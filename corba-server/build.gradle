version = '0.0'

apply plugin: 'java'
sourceCompatibility = 1.7

tasks.withType(Compile) {
    options.encoding = 'UTF-8'
}

String cpath;
switch(System.getProperty('os.name').toLowerCase().split()[0]) {
  case 'windows':
    cpath = "$buildDir/libs/*;$buildDir/rmi-dependencies/*"
    break
  case 'linux':
    cpath = "$buildDir/libs/*:$buildDir/rmi-dependencies/*"
    break
  default:
    throw new Exception('Unknown OS')
}

dependencies {
    compile project(':core')
    
    compile 'org.springframework:spring-context:3.2.4.RELEASE'
}

repositories {
    mavenCentral()
}

task rmiPrepare << {
    file("$buildDir/rmic").mkdirs();
}

task rmiDependencies(type: Sync) {
    from configurations.compile
    into "$buildDir/rmi-dependencies"
}
rmiDependencies.dependsOn rmiPrepare

task rmic(type:Exec) {
    commandLine 'rmic', '-poa', '-iiop', '-d', "$buildDir/rmic/", '-classpath', cpath, 'cyberwaste.kuzoff.corba.server.RemoteDatabaseManagerImpl'
}
rmic.dependsOn assemble
rmic.dependsOn rmiDependencies

build.dependsOn rmic

apply plugin:'application'
startScripts {
    mainClassName = 'cyberwaste.kuzoff.corba.server.CorbaServerManager'
    classpath.add(files { file("lib/rmic.jar") })
    
    doLast {
        unixScript.text = unixScript.text.replace('DEFAULT_JVM_OPTS=""', 'DEFAULT_JVM_OPTS="-Djava.naming.factory.initial=com.sun.jndi.cosnaming.CNCtxFactory -Djava.naming.provider.url=iiop://localhost:1060"')
    }
}

task rmiJar(type: Jar) {
    from files { file("$buildDir/rmic") }
    
    destinationDir = file("$buildDir/install/$project.name/lib")
    archiveName = 'rmic.jar'
}
rmiJar.dependsOn installApp
rmiJar.dependsOn rmic

task installCorbaApp
installCorbaApp.dependsOn rmiJar

task orbd(type:Exec) {
    commandLine 'sh', 'src/main/scripts/orbd', '&'
}
